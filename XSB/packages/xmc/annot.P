/* File:      annot.P
** Author(s): Abhik Roychoudhury
** Contact:   lmc@cs.sunysb.edu
** 
** Copyright (C) SUNY at Stony Brook, 1998-2000
** 
** XMC is free software; you can redistribute it and/or modify it under the
** terms of the GNU Library General Public License as published by the Free
** Software Foundation; either version 2 of the License, or (at your option)
** any later version.
** 
** XMC is distributed in the hope that it will be useful, but WITHOUT ANY
** WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
** FOR A PARTICULAR PURPOSE.  See the GNU Library General Public License for
** more details.
** 
** You should have received a copy of the GNU Library General Public License
** along with XMC; if not, write to the Free Software Foundation,
** Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
**
** $Id: annot.P,v 1.5 2010-08-19 15:03:39 spyrosh Exp $
** 
*/

% Annotations for Justifier (This is an optimization).
% Tells the justifier not to expand beyond these nodes.

% have to bypass the incredibly irritating module system of XSB

leaf(G) :- functor(G, transition, 3).
leaf(G) :- functor(G, fDef, 2).
leaf(G) :- functor(G, startstate, 2).
leaf(G) :- functor(G, member, 2).


% Annotations to the navigator (This is required).
% Tells the navigator the pattern of nodes that can appear
% in the final output.

show(G) :- functor(G, rec_models, 2).

%allowed(G) :- functor(G, models, 2).
allowed(G) :- G =.. [models, _, F], F \= form(_).
allowed(G) :- functor(G, transition, 3). %G =.. [transition, _, A, _], A\=nop.
allowed(G) :- functor(G, ancestor, 1).
